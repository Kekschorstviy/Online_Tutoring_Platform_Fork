package de.thu.thutorium.database.dbObjects;

import jakarta.persistence.*;
import lombok.*;

import java.util.Set;

/**
 * Represents a course category entity within the system. This entity is mapped to the {@code category}
 * table in the database.
 * <p>The {@link CourseCategoryDBO} class defines a category, which is a way to organize and classify courses
 * within the system. Each category has a unique name that must be specified when creating a new
 * category.
 * <p>Lombok annotations are used to automatically generate boilerplate code like getters, setters,
 * and constructors.
 *
 * @see CourseDBO
 */
@Entity
@Table(name = "category")
@Data
@NoArgsConstructor
@AllArgsConstructor
public class CourseCategoryDBO {

  /**
   * The unique identifier for the category. This value is automatically generated by the database.
   */
  @Id
  @GeneratedValue(strategy = GenerationType.IDENTITY)
  @Column(name = "category_id")
  @Setter(AccessLevel.NONE)
  private Long categoryId;

  /**
   * The name of the category. This field is mandatory and cannot be null. It must also be unique
   * across all categories.
   */
  @Column(name = "category_name", nullable = false, unique = true)
  private String categoryName;

  /**
   * Courses associated with this category.
   * <p> Defines a many-to-many relationship with {@link CourseDBO}.
   * The cascade types {@code PERSIST}, {@code MERGE}, and {@code REFRESH} ensure that these operations
   * are propagated to the associated courses.
   */
  @ManyToMany(mappedBy = "courseCategories",
          cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REFRESH})
  private Set<CourseDBO> courses;
}
